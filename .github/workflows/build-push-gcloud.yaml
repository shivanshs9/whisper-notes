name: "Docker build & push to Artifact Registry"
description: "Builds the docker image and pushes it to Google Artifact Registry"
on:
  workflow_call:
    inputs:
      repo:
        description: "Repository name"
        required: true
        type: string
      registry:
        description: "Google Artifact registry"
        required: false
        default: "docker.pkg.dev"
        type: string
      dockerfile:
        description: "Dockerfile path"
        required: false
        default: "Dockerfile"
        type: string
      context:
        description: "Docker context"
        required: false
        default: "."
        type: string
    outputs:
      imageid:
        description: "Image ID"
        value: ${{ jobs.push.outputs.imageid }}
      tag:
        description: "Image tag"
        value: ${{ jobs.push.outputs.tag }}
jobs:
  push:
    name: "Build & Push"
    runs-on: ubuntu-latest
    outputs:
      imageid: ${{ steps.build.outputs.imageid }}
      tag: ${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.sha_short }}
    steps:
      - uses: actions/checkout@v4
      - name: Docker login to Google Cloud
        id: vars
        run: |
          echo "$B64_GOOGLE_KEY" | docker login -u _json_key_base64 --password-stdin https://$REGISTRY
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          echo "branch=$(echo "$branch" | tr '/\' '-')" >> $GITHUB_OUTPUT
        shell: bash
        env:
          B64_GOOGLE_KEY: ${{ secrets.GCLOUD_SECRET_KEY }}
          REGISTRY: ${{ inputs.registry }}
      #    - name: Check image
      #      id: image_exists
      #      continue-on-error: true
      #      uses: cloudposse/github-action-docker-image-exists@main
      #      with:
      #        registry: ${{ inputs.registry }}
      #        image_name: ${{ secrets.GCLOUD_PROJECT }}/${{ inputs.repo }}
      #        tag: ${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.sha_short }}
      - uses: docker/setup-buildx-action@v3
        if: steps.image_exists.outcome == 'failure'
      - uses: docker/build-push-action@v5
      #      if: steps.image_exists.outcome == 'failure'
        id: build
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
      #        cache-from: type=gha
      #        cache-to: type=gha,mode=max
          push: true
          labels: |
            ci.run_id=${{ github.run_id }}
          build-args:
            - VITE_GRPC_BACKEND="${{ vars.VITE_GRPC_BACKEND }}"
          tags: |
            ${{ inputs.registry }}/${{ secrets.GCLOUD_PROJECT }}/${{ inputs.repo }}:${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.sha_short }}
