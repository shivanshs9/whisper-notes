// @generated by protobuf-ts 2.9.4 with parameter long_type_string
// @generated from protobuf file "notes.proto" (package "notes", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { NoteService } from "./notes";
import type { ListNotesResponse } from "./notes";
import type { ListNotesRequest } from "./notes";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateNoteResponse } from "./notes";
import type { CreateNoteRequest } from "./notes";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service notes.NoteService
 */
export interface INoteServiceClient {
    /**
     * @generated from protobuf rpc: CreateNote(notes.CreateNoteRequest) returns (notes.CreateNoteResponse);
     */
    createNote(input: CreateNoteRequest, options?: RpcOptions): UnaryCall<CreateNoteRequest, CreateNoteResponse>;
    /**
     * @generated from protobuf rpc: ListNotes(notes.ListNotesRequest) returns (notes.ListNotesResponse);
     */
    listNotes(input: ListNotesRequest, options?: RpcOptions): UnaryCall<ListNotesRequest, ListNotesResponse>;
}
/**
 * @generated from protobuf service notes.NoteService
 */
export class NoteServiceClient implements INoteServiceClient, ServiceInfo {
    typeName = NoteService.typeName;
    methods = NoteService.methods;
    options = NoteService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateNote(notes.CreateNoteRequest) returns (notes.CreateNoteResponse);
     */
    createNote(input: CreateNoteRequest, options?: RpcOptions): UnaryCall<CreateNoteRequest, CreateNoteResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateNoteRequest, CreateNoteResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListNotes(notes.ListNotesRequest) returns (notes.ListNotesResponse);
     */
    listNotes(input: ListNotesRequest, options?: RpcOptions): UnaryCall<ListNotesRequest, ListNotesResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListNotesRequest, ListNotesResponse>("unary", this._transport, method, opt, input);
    }
}
